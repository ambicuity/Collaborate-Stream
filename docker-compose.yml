version: '3.8'

services:
  # =============================================================================
  # KAFKA ECOSYSTEM
  # =============================================================================
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: collaborate-stream-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - collaborate-stream

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: collaborate-stream-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
    networks:
      - collaborate-stream

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry
    container_name: collaborate-stream-schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - collaborate-stream

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: collaborate-stream-kafka-ui
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: collaborate-stream
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    networks:
      - collaborate-stream

  # =============================================================================
  # FLINK
  # =============================================================================
  
  flink-jobmanager:
    image: apache/flink:1.18.0-scala_2.12-java11
    container_name: collaborate-stream-flink-jobmanager
    ports:
      - "8082:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 4
        parallelism.default: 2
    networks:
      - collaborate-stream

  flink-taskmanager:
    image: apache/flink:1.18.0-scala_2.12-java11
    container_name: collaborate-stream-flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 4
    networks:
      - collaborate-stream

  # =============================================================================
  # STORAGE (MinIO as S3 alternative)
  # =============================================================================
  
  minio:
    image: minio/minio:latest
    container_name: collaborate-stream-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - collaborate-stream

  # =============================================================================
  # HIVE METASTORE
  # =============================================================================
  
  postgres:
    image: postgres:15-alpine
    container_name: collaborate-stream-postgres
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: metastore
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - collaborate-stream

  hive-metastore:
    image: apache/hive:3.1.3
    container_name: collaborate-stream-hive-metastore
    depends_on:
      - postgres
    ports:
      - "9083:9083"
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: '-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore -Djavax.jdo.option.ConnectionUserName=hive -Djavax.jdo.option.ConnectionPassword=hive'
    networks:
      - collaborate-stream

  # =============================================================================
  # PRESTO
  # =============================================================================
  
  presto:
    image: trinodb/trino:latest
    container_name: collaborate-stream-presto
    ports:
      - "8083:8080"
    volumes:
      - ./presto/catalog:/etc/trino/catalog
    networks:
      - collaborate-stream

  # =============================================================================
  # MONITORING
  # =============================================================================
  
  prometheus:
    image: prom/prometheus:latest
    container_name: collaborate-stream-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - collaborate-stream

  grafana:
    image: grafana/grafana:latest
    container_name: collaborate-stream-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./visualization/grafana_dashboard.json:/etc/grafana/provisioning/dashboards/collaborate-stream.json
    networks:
      - collaborate-stream

networks:
  collaborate-stream:
    driver: bridge

volumes:
  minio-data:
  postgres-data:
  prometheus-data:
  grafana-data:
